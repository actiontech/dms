{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of our dms API.",
    "title": "dms api.",
    "version": "0.1.0"
  },
  "basePath": "/",
  "paths": {
    "/v1/dms/basic_info": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get basic info.",
        "operationId": "GetBasicInfo",
        "responses": {
          "200": {
            "description": "GetBasicInfoReply",
            "schema": {
              "$ref": "#/definitions/GetBasicInfoReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/company_notice": {
      "get": {
        "description": "get company notice info",
        "tags": [
          "dms"
        ],
        "operationId": "GetCompanyNotice",
        "responses": {
          "200": {
            "description": "GetCompanyNoticeReply",
            "schema": {
              "$ref": "#/definitions/GetCompanyNoticeReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "description": "update company notice info",
        "tags": [
          "dms"
        ],
        "operationId": "UpdateCompanyNotice",
        "parameters": [
          {
            "x-go-name": "UpdateCompanyNotice",
            "description": "Update a companynotice",
            "name": "company_notice",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/feishu": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get feishu configuration.",
        "operationId": "GetFeishuConfiguration",
        "responses": {
          "200": {
            "description": "GetFeishuConfigurationReply",
            "schema": {
              "$ref": "#/definitions/GetFeishuConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "update feishu configuration.",
        "operationId": "UpdateFeishuConfiguration",
        "parameters": [
          {
            "x-go-name": "UpdateFeishuConfiguration",
            "description": "update feishu configuration",
            "name": "update_feishu_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/feishu/test": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "test feishu configuration.",
        "operationId": "TestFeishuConfiguration",
        "parameters": [
          {
            "x-go-name": "TestFeishuConfiguration",
            "description": "test feishu configuration",
            "name": "test_feishu_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "TestFeishuConfigurationReply",
            "schema": {
              "$ref": "#/definitions/TestFeishuConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/ldap": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get ldap configuration.",
        "operationId": "GetLDAPConfiguration",
        "responses": {
          "200": {
            "description": "GetLDAPConfigurationResDataReply",
            "schema": {
              "$ref": "#/definitions/GetLDAPConfigurationResDataReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "Update ldap configuration.",
        "operationId": "UpdateLDAPConfiguration",
        "parameters": [
          {
            "x-go-name": "LDAPConfiguration",
            "description": "update ldap configuration",
            "name": "ldap",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/license": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get license.",
        "operationId": "GetLicense",
        "responses": {
          "200": {
            "description": "GetLicenseReply",
            "schema": {
              "$ref": "#/definitions/GetLicenseReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "dms"
        ],
        "summary": "import license.",
        "operationId": "SetLicense",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "LicenseFile",
            "description": "license file.",
            "name": "license_file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/license/check": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "dms"
        ],
        "summary": "notify message.",
        "operationId": "CheckLicense",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "LicenseFile",
            "description": "license file.",
            "name": "license_file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "CheckLicenseReply",
            "schema": {
              "$ref": "#/definitions/CheckLicenseReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/license/info": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get generate license info.",
        "operationId": "GetLicenseInfo",
        "responses": {
          "200": {
            "$ref": "#/responses/GetLicenseInfoReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/license/usage": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get license usage.",
        "operationId": "GetLicenseUsage",
        "responses": {
          "200": {
            "description": "GetLicenseUsageReply",
            "schema": {
              "$ref": "#/definitions/GetLicenseUsageReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/oauth2": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get Oauth2 configuration.",
        "operationId": "GetOauth2Configuration",
        "responses": {
          "200": {
            "description": "GetOauth2ConfigurationResDataReply",
            "schema": {
              "$ref": "#/definitions/GetOauth2ConfigurationResDataReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "Update Oauth2 configuration..",
        "operationId": "UpdateOauth2Configuration",
        "parameters": [
          {
            "x-go-name": "Oauth2Configuration",
            "description": "update oauth2 configuration",
            "name": "oauth2",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/smtp": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get smtp configuration.",
        "operationId": "GetSMTPConfiguration",
        "responses": {
          "200": {
            "description": "GetSMTPConfigurationReply",
            "schema": {
              "$ref": "#/definitions/GetSMTPConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "Get smtp configuration.",
        "operationId": "UpdateSMTPConfiguration",
        "parameters": [
          {
            "x-go-name": "UpdateSMTPConfiguration",
            "description": "update smtp configuration",
            "name": "smtp_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/smtp/test": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "test smtp configuration.",
        "operationId": "TestSMTPConfiguration",
        "parameters": [
          {
            "x-go-name": "TestSMTPConfiguration",
            "description": "test smtp configuration",
            "name": "test_smtp_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "TestSMTPConfigurationReply",
            "schema": {
              "$ref": "#/definitions/TestSMTPConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/sql_query": {
      "get": {
        "tags": [
          "cloudbeaver"
        ],
        "summary": "get sql_query configuration.",
        "operationId": "GetSQLQueryConfiguration",
        "responses": {
          "200": {
            "description": "GetSQLQueryConfigurationReply",
            "schema": {
              "$ref": "#/definitions/GetSQLQueryConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/webhook": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get webhook configuration.",
        "operationId": "GetWebHookConfiguration",
        "responses": {
          "200": {
            "description": "GetWebHookConfigurationReply",
            "schema": {
              "$ref": "#/definitions/GetWebHookConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "update webhook configuration.",
        "operationId": "UpdateWebHookConfiguration",
        "parameters": [
          {
            "x-go-name": "UpdateWebHookConfiguration",
            "description": "test webhook configuration",
            "name": "webhook_config",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/webhook/test": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "test webhook configuration.",
        "operationId": "TestWebHookConfiguration",
        "responses": {
          "200": {
            "description": "TestWebHookConfigurationReply",
            "schema": {
              "$ref": "#/definitions/TestWebHookConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/wechat": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "get wechat configuration.",
        "operationId": "GetWeChatConfiguration",
        "responses": {
          "200": {
            "description": "GetWeChatConfigurationReply",
            "schema": {
              "$ref": "#/definitions/GetWeChatConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dms"
        ],
        "summary": "update wechat configuration.",
        "operationId": "UpdateWeChatConfiguration",
        "parameters": [
          {
            "x-go-name": "UpdateWeChatConfiguration",
            "description": "update wechat configuration",
            "name": "update_wechat_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/configurations/wechat/test": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "test wechat configuration.",
        "operationId": "TestWeChatConfiguration",
        "parameters": [
          {
            "x-go-name": "TestWeChatConfiguration",
            "description": "test wechat configuration",
            "name": "test_wechat_configuration",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "TestWeChatConfigurationReply",
            "schema": {
              "$ref": "#/definitions/TestWeChatConfigurationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/db_services/driver_options": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List db service driver option.",
        "operationId": "ListDBServiceDriverOption",
        "responses": {
          "200": {
            "description": "ListDBServiceDriverOptionReply",
            "schema": {
              "$ref": "#/definitions/ListDBServiceDriverOptionReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/masking/rules": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List masking rules.",
        "operationId": "ListMaskingRules",
        "responses": {
          "200": {
            "description": "ListMaskingRulesReply",
            "schema": {
              "$ref": "#/definitions/ListMaskingRulesReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/notifications": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "notify message.",
        "operationId": "Notification",
        "parameters": [
          {
            "x-go-name": "Notification",
            "description": "notification",
            "name": "notification",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "NotificationReply",
            "schema": {
              "$ref": "#/definitions/NotificationReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/oauth2/tips": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get Oauth2 Tips.",
        "operationId": "GetOauth2Tips",
        "responses": {
          "200": {
            "description": "GetOauth2TipsReply",
            "schema": {
              "$ref": "#/definitions/GetOauth2TipsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/oauth2/user/bind": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Bind Oauth2 User.",
        "operationId": "BindOauth2User",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserName",
            "name": "user_name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Pwd",
            "name": "pwd",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Oauth2Token",
            "name": "oauth2_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "BindOauth2UserReply",
            "schema": {
              "$ref": "#/definitions/BindOauth2UserReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/op_permissions": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List op permission.",
        "operationId": "ListOpPermissions",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of op permission to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of op permissions to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Order by the specified field",
            "name": "order_by",
            "in": "query"
          },
          {
            "x-go-name": "FilterByTarget",
            "description": "filter by op permission target",
            "name": "filter_by_target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListOpPermissionReply",
            "schema": {
              "$ref": "#/definitions/ListOpPermissionReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/personalization": {
      "post": {
        "description": "personalize [title, logo]",
        "tags": [
          "dms"
        ],
        "operationId": "Personalization",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Title",
            "description": "title",
            "name": "title",
            "in": "formData"
          },
          {
            "type": "file",
            "x-go-name": "File",
            "description": "file upload",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/personalization/logo": {
      "get": {
        "description": "get logo",
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "dms"
        ],
        "operationId": "GetStaticLogo",
        "responses": {
          "200": {
            "$ref": "#/responses/GetStaticLogoReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/plugin": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Register dms plugin.",
        "operationId": "RegisterDMSPlugin",
        "parameters": [
          {
            "x-go-name": "Plugin",
            "description": "Register dms plugin",
            "name": "plugin",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List projects.",
        "operationId": "ListProjects",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of Project to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of Projects to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "filter the Project name",
            "name": "filter_by_name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByUID",
            "description": "filter the Project UID",
            "name": "filter_by_uid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListProjectReply",
            "schema": {
              "$ref": "#/definitions/ListProjectReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add project.",
        "operationId": "AddProject",
        "parameters": [
          {
            "x-go-name": "Project",
            "description": "Add new Project",
            "name": "project",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddProjectReply",
            "schema": {
              "$ref": "#/definitions/AddProjectReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/export": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Export projects file.",
        "operationId": "ExportProjects",
        "responses": {
          "200": {
            "$ref": "#/responses/ExportProjectsReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/import": {
      "put": {
        "description": "Import projects",
        "tags": [
          "dms"
        ],
        "operationId": "ImportProjects",
        "parameters": [
          {
            "type": "array",
            "items": {},
            "x-go-name": "Projects",
            "name": "projects",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/import_template": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get import projects template.",
        "operationId": "GetImportProjectsTemplate",
        "responses": {
          "200": {
            "description": "GetImportProjectsTemplateReply",
            "schema": {
              "$ref": "#/definitions/GetImportProjectsTemplateReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/preview_import": {
      "post": {
        "description": "Preview import projects",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "dms"
        ],
        "operationId": "PreviewImportProjects",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "ProjectsFile",
            "description": "projects file.",
            "name": "projects_file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PreviewImportProjectsReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/tips": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get project tips.",
        "operationId": "GetProjectTips",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "Project uid",
            "name": "project_uid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GetProjectTipsReply",
            "schema": {
              "$ref": "#/definitions/GetProjectTipsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "update a project.",
        "operationId": "UpdateProject",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "Project uid",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Project",
            "description": "Update a project",
            "name": "project",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a project",
        "tags": [
          "dms"
        ],
        "operationId": "DelProject",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project uid",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/archive": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Archive a project.",
        "operationId": "ArchiveProject",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "Project uid",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_tasks": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Batch get data_export task.",
        "operationId": "BatchGetDataExportTask",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "TaskUids",
            "name": "data_export_task_uids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "BatchGetDataExportTaskReply",
            "schema": {
              "$ref": "#/definitions/BatchGetDataExportTaskReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add data_export task.",
        "operationId": "AddDataExportTask",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DataExportTasks",
            "description": "add data export workflow",
            "name": "data_export_tasks",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AddDataExportTaskReply",
            "schema": {
              "$ref": "#/definitions/AddDataExportTaskReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_tasks/{data_export_task_uid}/data_export_task_sqls": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List data_export workflow.",
        "operationId": "ListDataExportTaskSQLs",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportTaskUid",
            "name": "data_export_task_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of member to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of members to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDataExportTaskSQLsReply",
            "schema": {
              "$ref": "#/definitions/ListDataExportTaskSQLsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_tasks/{data_export_task_uid}/data_export_task_sqls/download": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "dowload data_export sqls.",
        "operationId": "DownloadDataExportTaskSQLs",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportTaskUid",
            "name": "data_export_task_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DownloadDataExportTaskSQLsReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_tasks/{data_export_task_uid}/download": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "download task file.",
        "operationId": "DownloadDataExportTask",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportTaskUid",
            "name": "data_export_task_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DownloadDataExportTaskReply"
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List data_export workflow.",
        "operationId": "ListDataExportWorkflows",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of member to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of members to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "FilterByStatus",
            "description": "filter the status",
            "name": "filter_by_status",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByCreateUserUid",
            "description": "filter create user id",
            "name": "filter_by_create_user_uid",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterCurrentStepAssigneeUserUid",
            "description": "filter current assignee user id",
            "name": "filter_current_step_assignee_user_uid",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByDBServiceUid",
            "description": "filter db_service id",
            "name": "filter_by_db_service_uid",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterCreateTimeFrom",
            "description": "filter create time from",
            "name": "filter_create_time_from",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterCreateTimeTo",
            "description": "filter create time end",
            "name": "filter_create_time_to",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FuzzyKeyword",
            "description": "filter fuzzy key word for id/name",
            "name": "fuzzy_keyword",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDataExportWorkflowsReply",
            "schema": {
              "$ref": "#/definitions/ListDataExportWorkflowsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add data_export workflow.",
        "operationId": "AddDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DataExportWorkflow",
            "description": "add data export workflow",
            "name": "data_export_workflow",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddDataExportWorkflowReply",
            "schema": {
              "$ref": "#/definitions/AddDataExportWorkflowReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows/cancel": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Cancel data export workflows.",
        "operationId": "CancelDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows/{data_export_workflow_uid}": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get data_export workflow.",
        "operationId": "GetDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DataExportWorkflowUid",
            "name": "data_export_workflow_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetDataExportWorkflowReply",
            "schema": {
              "$ref": "#/definitions/GetDataExportWorkflowReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows/{data_export_workflow_uid}/approve": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Approve data_export workflow.",
        "operationId": "ApproveDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportWorkflowUid",
            "name": "data_export_workflow_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows/{data_export_workflow_uid}/export": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "exec data_export workflow.",
        "operationId": "ExportDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportWorkflowUid",
            "name": "data_export_workflow_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/data_export_workflows/{data_export_workflow_uid}/reject": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Reject data_export workflow.",
        "operationId": "RejectDataExportWorkflow",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DataExportWorkflowUid",
            "name": "data_export_workflow_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/database_source_services": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List database source service.",
        "operationId": "ListDatabaseSourceServices",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListDatabaseSourceServicesReply",
            "schema": {
              "$ref": "#/definitions/ListDatabaseSourceServicesReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add database source service.",
        "operationId": "AddDatabaseSourceService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DatabaseSourceService",
            "description": "add database source service",
            "name": "database_source_service",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddDatabaseSourceServiceReply",
            "schema": {
              "$ref": "#/definitions/AddDatabaseSourceServiceReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/database_source_services/tips": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List database source service tips.",
        "operationId": "ListDatabaseSourceServiceTips",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListDatabaseSourceServiceTipsReply",
            "schema": {
              "$ref": "#/definitions/ListDatabaseSourceServiceTipsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/database_source_services/{database_source_service_uid}": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get database source service.",
        "operationId": "GetDatabaseSourceService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "DatabaseSourceServiceUid",
            "name": "database_source_service_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetDatabaseSourceServiceReply",
            "schema": {
              "$ref": "#/definitions/GetDatabaseSourceServiceReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "update database source service.",
        "operationId": "UpdateDatabaseSourceService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DatabaseSourceServiceUid",
            "name": "database_source_service_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DatabaseSourceService",
            "description": "update database source service",
            "name": "database_source_service",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete database source service.",
        "operationId": "DeleteDatabaseSourceService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DatabaseSourceServiceUid",
            "name": "database_source_service_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/database_source_services/{database_source_service_uid}/sync": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Sync database source service.",
        "operationId": "SyncDatabaseSourceService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DatabaseSourceServiceUid",
            "name": "database_source_service_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/db_services": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List db service.",
        "operationId": "ListDBServices",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of db service to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of users to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByBusiness",
            "description": "the db service business name",
            "name": "filter_by_business",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByHost",
            "description": "the db service host",
            "name": "filter_by_host",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByUID",
            "description": "the db service uid",
            "name": "filter_by_uid",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "the db service name",
            "name": "filter_by_name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByPort",
            "description": "the db service port",
            "name": "filter_by_port",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByDBType",
            "description": "the db service db type",
            "name": "filter_by_db_type",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "FuzzyKeyword",
            "description": "the db service fuzzy keyword,include host/port",
            "name": "fuzzy_keyword",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "IsEnableMasking",
            "description": "is masking",
            "name": "is_enable_masking",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDBServiceReply",
            "schema": {
              "$ref": "#/definitions/ListDBServiceReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add DB Service.",
        "operationId": "AddDBService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DBService",
            "description": "Add new db service",
            "name": "db_service",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddDBServiceReply",
            "schema": {
              "$ref": "#/definitions/AddDBServiceReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/db_services/connection": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "check if the db_service is connectable.",
        "operationId": "CheckDBServiceIsConnectable",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DBService",
            "description": "check db_service is connectable",
            "name": "db_service",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "CheckDBServiceIsConnectableReply",
            "schema": {
              "$ref": "#/definitions/CheckDBServiceIsConnectableReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/db_services/tips": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List db service tip.",
        "operationId": "ListDBServiceTips",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "FilterDBType",
            "name": "filter_db_type",
            "in": "query"
          },
          {
            "enum": [
              "save_audit_plan",
              "create_workflow",
              "create_export_task"
            ],
            "type": "string",
            "x-go-name": "FunctionalModule",
            "name": "functional_module",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDBServiceTipsReply",
            "schema": {
              "$ref": "#/definitions/ListDBServiceTipsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/db_services/{db_service_uid}": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "update a DB Service.",
        "operationId": "UpdateDBService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DBServiceUid",
            "description": "db_service_uid",
            "name": "db_service_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "DBService",
            "description": "Update a DB service",
            "name": "db_service",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete a DB Service.",
        "operationId": "DelDBService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DBServiceUid",
            "description": "db service uid",
            "name": "db_service_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/db_services/{db_service_uid}/connection": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "check if the db_service is connectable.",
        "operationId": "CheckDBServiceIsConnectableById",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "DBServiceUid",
            "description": "db service uid",
            "name": "db_service_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "CheckDBServiceIsConnectableReply",
            "schema": {
              "$ref": "#/definitions/CheckDBServiceIsConnectableReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/member_groups": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List member group, for front page.",
        "operationId": "ListMemberGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of member to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of members to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "filter the user group name",
            "name": "filter_by_name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListMemberGroupsReply",
            "schema": {
              "$ref": "#/definitions/ListMemberGroupsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add member group.",
        "operationId": "AddMemberGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "MemberGroup",
            "description": "Add new member group",
            "name": "member_group",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddMemberGroupReply",
            "schema": {
              "$ref": "#/definitions/AddMemberGroupReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/member_groups/{member_group_uid}": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get member group, for front page.",
        "operationId": "GetMemberGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MemberGroupUid",
            "description": "Member group id",
            "name": "member_group_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetMemberGroupReply",
            "schema": {
              "$ref": "#/definitions/GetMemberGroupReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "update member group, for front page.",
        "operationId": "UpdateMemberGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "MemberGroupUid",
            "description": "Member group id",
            "name": "member_group_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "MemberGroup",
            "description": "Update a member group",
            "name": "member_group",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "delete member group, for front page.",
        "operationId": "DeleteMemberGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "MemberGroupUid",
            "description": "member group id",
            "name": "member_group_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/members": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List member, for front page.",
        "operationId": "ListMembers",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of member to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of members to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByUserUid",
            "description": "filter the member user uid",
            "name": "filter_by_user_uid",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListMemberReply",
            "schema": {
              "$ref": "#/definitions/ListMemberReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add member.",
        "operationId": "AddMember",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Member",
            "description": "Add new member",
            "name": "member",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddMemberReply",
            "schema": {
              "$ref": "#/definitions/AddMemberReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/members/internal": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List members, for internal backend service.",
        "operationId": "ListMembersForInternal",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of member to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of members to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListMembersForInternalReply",
            "schema": {
              "$ref": "#/definitions/ListMembersForInternalReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/members/tips": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List member tips.",
        "operationId": "ListMemberTips",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ListMemberTipsReply",
            "schema": {
              "$ref": "#/definitions/ListMemberTipsReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/members/{member_uid}": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Update a member.",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "MemberUid",
            "description": "Member uid",
            "name": "member_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Member",
            "description": "Update a member",
            "name": "member",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete a member.",
        "operationId": "DelMember",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "project id",
            "name": "project_uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "MemberUid",
            "description": "member uid",
            "name": "member_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/projects/{project_uid}/unarchive": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Unarchive a project.",
        "operationId": "UnarchiveProject",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ProjectUid",
            "description": "Project uid",
            "name": "project_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/proxy": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Register dms proxy target.",
        "operationId": "RegisterDMSProxyTarget",
        "parameters": [
          {
            "x-go-name": "DMSProxyTarget",
            "description": "register dms proxy",
            "name": "dms_proxy_target",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/roles": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List roles.",
        "operationId": "ListRoles",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of role to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of roles to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "filter the role name",
            "name": "filter_by_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListRoleReply",
            "schema": {
              "$ref": "#/definitions/ListRoleReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add role.",
        "operationId": "AddRole",
        "parameters": [
          {
            "x-go-name": "Role",
            "description": "Add new role",
            "name": "role",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddRoleReply",
            "schema": {
              "$ref": "#/definitions/AddRoleReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/roles/{role_uid}": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Update a role.",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "RoleUid",
            "description": "Role uid",
            "name": "role_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Role",
            "description": "Update a role",
            "name": "role",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete a role.",
        "operationId": "DelRole",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "RoleUid",
            "description": "role uid",
            "name": "role_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/sessions": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add a session.",
        "operationId": "AddSession",
        "parameters": [
          {
            "x-go-name": "Session",
            "description": "Add a new session",
            "name": "session",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddSessionReply",
            "schema": {
              "$ref": "#/definitions/AddSessionReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "del a session.",
        "operationId": "DelSession",
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/sessions/user": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get current user.",
        "operationId": "GetUserBySession",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserUid",
            "name": "user_uid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GetUserBySessionReply",
            "schema": {
              "$ref": "#/definitions/GetUserBySessionReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/user_groups": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List user groups.",
        "operationId": "ListUserGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of user to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of user groups to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "filter the user group name",
            "name": "filter_by_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListUserGroupReply",
            "schema": {
              "$ref": "#/definitions/ListUserGroupReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add user group.",
        "operationId": "AddUserGroup",
        "parameters": [
          {
            "x-go-name": "UserGroup",
            "description": "Add new user group",
            "name": "user_group",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddUserGroupReply",
            "schema": {
              "$ref": "#/definitions/AddUserGroupReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/user_groups/{user_group_uid}": {
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Update a user group.",
        "operationId": "UpdateUserGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserGroupUid",
            "description": "UserGroup uid",
            "name": "user_group_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "UserGroup",
            "description": "Update a user group",
            "name": "user_group",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete a user group.",
        "operationId": "DelUserGroup",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserGroupUid",
            "description": "user group uid",
            "name": "user_group_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/users": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "List users.",
        "operationId": "ListUsers",
        "parameters": [
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageSize",
            "description": "the maximum count of user to be returned",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint32",
            "x-go-name": "PageIndex",
            "description": "the offset of users to be returned, default is 0",
            "name": "page_index",
            "in": "query"
          },
          {
            "x-go-name": "OrderBy",
            "description": "Multiple of [\"name\"], default is [\"name\"]",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByName",
            "description": "filter the user name",
            "name": "filter_by_name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "FilterByUids",
            "description": "filter the user uids",
            "name": "filter_by_uids",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "FilterDeletedUser",
            "description": "filter deleted user to be return ,default is false",
            "name": "filter_del_user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ListUserReply",
            "schema": {
              "$ref": "#/definitions/ListUserReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Update current user.",
        "operationId": "UpdateCurrentUser",
        "parameters": [
          {
            "x-go-name": "User",
            "description": "Update current user",
            "name": "current_user",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Add user.",
        "operationId": "AddUser",
        "parameters": [
          {
            "x-go-name": "User",
            "description": "Add new user",
            "name": "user",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "AddUserReply",
            "schema": {
              "$ref": "#/definitions/AddUserReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/users/gen_token": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "Gen user access token.",
        "operationId": "GenAccessToken",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ExpirationDays",
            "name": "expiration_days",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GenAccessTokenReply",
            "schema": {
              "$ref": "#/definitions/GenAccessTokenReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/users/{user_uid}": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get user info, This API is used by other component such as sqle\u0026auth to get user info.",
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserUid",
            "description": "user uid",
            "name": "user_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetUserReply",
            "schema": {
              "$ref": "#/definitions/GetUserReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "dms"
        ],
        "summary": "Update a user.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserUid",
            "description": "User uid",
            "name": "user_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "User",
            "description": "Update a user",
            "name": "user",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dms"
        ],
        "summary": "Delete a user.",
        "operationId": "DelUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserUid",
            "description": "user uid",
            "name": "user_uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/users/{user_uid}/op_permission": {
      "get": {
        "tags": [
          "dms"
        ],
        "summary": "Get user op permission info, This API is used by other component such as sqle\u0026auth to check user permissions.",
        "operationId": "GetUserOpPermission",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "UserUid",
            "description": "user uid",
            "name": "user_uid",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "UserOpPermission",
            "description": "user op permission info",
            "name": "user_op_permission",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "GetUserOpPermissionReply",
            "schema": {
              "$ref": "#/definitions/GetUserOpPermissionReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    },
    "/v1/dms/webhooks": {
      "post": {
        "tags": [
          "dms"
        ],
        "summary": "webhook send message.",
        "operationId": "WebHookSendMessage",
        "parameters": [
          {
            "x-go-name": "WebHookMessage",
            "description": "webhooks",
            "name": "webhook_message",
            "in": "body",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "WebHookSendMessageReply",
            "schema": {
              "$ref": "#/definitions/WebHookSendMessageReply"
            }
          },
          "default": {
            "description": "GenericResp",
            "schema": {
              "$ref": "#/definitions/GenericResp"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddDBServicePreCheckReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "AddDBServiceReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddDataExportTaskReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddDataExportWorkflowReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddDatabaseSourceServiceReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddMemberGroupReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddMemberReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddProjectReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddRoleReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddSessionReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddUserGroupReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "AddUserReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "BatchGetDataExportTaskReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "BindOauth2UserReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "CheckDBServiceIsConnectableReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "CheckLicenseReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "DelDBServicePreCheckReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "DelUserGroupPreCheckReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "DelUserPreCheckReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "GenAccessTokenReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "GetBasicInfoReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetCompanyNoticeReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetDataExportWorkflowReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetDatabaseSourceServiceReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetFeishuConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetLDAPConfigurationResDataReply": {
      "x-go-name": "GetLDAPConfigurationReply",
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetLicenseReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetLicenseUsageReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetMemberGroupReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetOauth2ConfigurationResDataReply": {
      "x-go-name": "GetOauth2ConfigurationReply",
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetOauth2TipsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetSMTPConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetSQLQueryConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetUserBySessionReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetUserOpPermissionReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "GetUserReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "GetWeChatConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "GetWebHookConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDBServiceDriverOptionReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDBServiceReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "ListDBServiceTipsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDataExportTaskSQLsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDataExportWorkflowsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDatabaseSourceServiceTipsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListDatabaseSourceServicesReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListMaskingRulesReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListMemberGroupsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListMemberReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListMemberTipsReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListMembersForInternalReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "ListOpPermissionReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListProjectReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "ListRoleReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListUserGroupReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "ListUserReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "NotificationReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "OperateDataResourceHandleReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "RegisterDMSPluginReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "RegisterDMSProxyTargetReply": {
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    },
    "TestFeishuConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "TestSMTPConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "TestWeChatConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "TestWebHookConfigurationReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "UpdateDBServiceReply": {
      "x-go-package": "github.com/actiontech/dms/api/dms/service/v1"
    },
    "WebHookSendMessageReply": {
      "x-go-name": "WebHooksSendMessageReply",
      "x-go-package": "github.com/actiontech/dms/pkg/dms-common/api/dms/v1"
    }
  },
  "responses": {
    "DownloadDataExportTaskReply": {
      "description": "",
      "schema": {
        "type": "file"
      }
    },
    "DownloadDataExportTaskSQLsReply": {
      "description": "",
      "schema": {
        "type": "file"
      }
    },
    "ExportProjectsReply": {
      "description": "",
      "schema": {
        "type": "file"
      }
    },
    "GenericResp": {
      "description": "GenericResp defines the return code and msg",
      "headers": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "code"
        },
        "message": {
          "type": "string",
          "description": "message"
        }
      }
    },
    "GetImportProjectsTemplateReply": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint8"
        }
      }
    },
    "GetLicenseInfoReply": {
      "description": "",
      "schema": {
        "type": "file"
      }
    },
    "GetProjectTipsReply": {
      "description": "",
      "headers": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "code"
        },
        "data": {
          "type": "array",
          "items": {},
          "description": "project tips"
        },
        "message": {
          "type": "string",
          "description": "message"
        }
      }
    },
    "GetStaticLogoReply": {
      "description": "",
      "schema": {
        "type": "file"
      }
    },
    "PreviewImportProjectsReply": {
      "description": "",
      "headers": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "code"
        },
        "data": {
          "type": "array",
          "items": {},
          "description": "list preview import projects"
        },
        "message": {
          "type": "string",
          "description": "message"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}