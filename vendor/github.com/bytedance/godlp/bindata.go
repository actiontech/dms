// Code generated by go-bindata. DO NOT EDIT.
// sources:
// conf.yml (20.204kB)

package dlp

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _confYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xfd\x77\xdb\xc6\x91\xbf\xeb\xaf\xd8\x07\xbd\xeb\x23\x53\x50\x47\x90\xd4\x87\xf9\xd2\xaa\x34\x49\xcb\x3c\xeb\xeb\x48\xc9\xbd\x96\xe2\xf1\x2d\x81\x25\x85\x13\x09\xf0\x00\x50\x96\x22\xf0\x5e\x94\x26\xb1\xd3\xca\x76\xda\xc8\xcd\x35\xb1\xeb\xb8\x97\xd8\x49\x5a\x5b\x76\xd3\xfa\x43\x72\xec\x7f\x46\x20\xa5\x9f\xfc\x2f\xdc\xdb\x5d\x00\x04\x40\x50\xa2\x64\xba\xbd\xbb\x77\x79\x2f\xe2\x7e\xcc\xcc\xee\xce\xcc\xce\xce\xcc\x2e\x3c\x0c\xa6\xe6\x52\xd3\xf3\x80\x97\xa5\xb2\x58\x01\x65\xb1\x8a\x86\x86\xc1\x0a\x5a\x57\x01\x54\x10\x58\xac\xd7\x91\x92\x84\x35\x54\x4d\x42\x15\xb1\x00\x4a\x02\x69\x57\x61\x0d\x01\xa8\x82\x54\xb5\x9e\x94\xa5\x32\x50\x35\xa5\xc1\x6b\x40\x94\x08\xa1\x7f\xc4\x7f\x46\x2a\xf2\xd0\x54\x55\x2e\xc1\x6a\x7c\x08\x80\x14\xd4\x50\x1c\x44\xc2\x11\x2e\xc4\x85\x43\x91\xf1\x21\x00\x12\x75\xf1\x22\x52\x54\x51\x96\xe2\x60\x35\x32\x04\xc0\x8c\x2c\xa0\x38\x50\x50\x15\x41\x15\x81\x61\x20\xa0\x52\xa3\xa2\x9b\x75\x8c\x50\xad\xca\x97\xb2\xf3\xc9\x38\x00\x65\x58\x25\x20\x9a\xd2\x40\xa0\x2c\x2b\x40\x41\x35\x59\x43\x40\x45\xca\xaa\xc8\x23\x70\x49\xd4\x96\x81\x52\xe7\x59\x13\x12\x83\xd4\x1b\x0a\x02\x7c\x55\x44\x92\x06\x72\xa9\x0b\x2c\x10\x50\x19\x36\xaa\x1a\x10\x55\x0a\x35\x04\xc0\x30\x10\xcb\x20\x2d\xc1\x52\x15\x65\x1b\x55\xa4\xe2\x3e\x54\xab\x6b\xeb\x2c\x10\x35\x50\x43\x50\x52\x01\xac\x56\x81\x42\x3a\x31\x27\x10\x01\x16\x58\x50\x6a\x68\x5e\x64\x5e\x96\x34\x28\x4a\x2a\x50\xe5\x1a\x22\x38\x99\x94\xca\x02\x59\xaa\xae\x03\x6d\x19\xa9\xa8\x9b\xce\x08\x99\xc4\xc2\x32\x92\x00\x16\xcb\x25\x11\x0f\x86\x6a\xf2\x2a\x72\x11\xc1\x23\x69\xcb\x68\x9d\xa0\x8a\x12\x48\x89\xaa\x3d\x2c\x26\xe1\x98\x45\x1c\xe4\x0b\x84\xa8\x40\x61\x00\x04\x3c\x52\xf0\xbc\x08\x31\x50\x5a\x07\xf5\x86\xba\x6c\x52\xc6\xc4\x04\x07\x31\x2c\x3a\x47\xd5\x24\x36\x03\xd7\xa6\xe5\x4a\x46\xaa\x37\xb4\x38\x88\x85\xcf\x8c\xd1\xb6\x2c\xaa\xa0\xb5\x2c\xa1\x13\x07\xe1\xa1\x19\xa8\xae\x50\x2c\x32\x7e\x7a\x0d\xd6\xea\x55\x04\xac\x66\xa0\x6a\x50\xd1\x86\x00\x08\x01\x5c\x9d\x85\x35\x14\xb7\x80\x92\xe7\x13\x59\x30\x0c\x70\x1b\x90\xcb\x36\xca\x10\x00\x80\x54\x16\xd6\xeb\x28\x0e\x4c\x28\x59\x22\x40\x79\x5c\x65\xc1\x42\x62\x8a\x05\xd9\xf4\xfc\x74\x22\x99\x66\x41\x62\x7a\x6a\x0e\x14\x08\xde\x45\x58\x6d\xa0\x38\x60\xde\x62\x48\x75\xae\x5c\x56\x91\x16\x07\x1c\xa9\xcd\x43\x41\x10\xa5\x4a\x1c\x84\x31\x41\xd2\x05\xca\x8a\x5c\xc3\x5c\x06\x1a\x14\xab\x04\x6a\x1a\x49\x15\x6d\x39\x0e\x46\x49\x2d\x8b\x56\x91\xa2\xa2\x38\xd1\x42\xd2\x92\xa9\x48\xb2\x82\x92\xcb\x50\xc9\x61\xd2\xcc\x4f\x18\x47\xf3\x05\x51\x12\xe2\x20\x0f\x66\x17\x67\xd2\xd9\x4c\x12\x14\x1c\x53\x37\xdb\xf0\x7c\xe7\xcf\x27\x8a\x8b\xf3\xf3\xe9\x6c\x31\x99\xc8\xa5\xad\x96\xe9\xb9\x9f\xda\x2d\x3f\x3d\x9f\x59\x48\xe7\xe6\xc9\xfa\xe6\x17\x67\x93\x0b\x8b\x89\x85\xcc\xdc\x6c\xc1\xc3\xca\xc4\xf4\xb4\x0f\xbf\xba\x59\xe1\xc3\xfe\x85\xc4\x94\x07\x95\xb6\xf8\x80\x9a\x9c\xf6\x80\x3b\x5b\xad\xc1\xde\x36\x1b\x53\x3f\xee\x31\x6a\x7a\x66\x7e\xe1\x67\x7d\x10\xea\x81\x7e\x36\x91\x4b\x8f\xc5\x3c\xf8\x58\xfe\x2e\x64\x0a\xc5\x38\x78\x4f\x5b\x58\x30\x93\x1a\x65\x41\x32\x9b\x8c\x46\x58\x90\x48\xa5\xb2\xe9\x5c\x8e\xc5\xc2\x3a\x9b\xce\xb2\x20\x95\xce\xa4\xd2\xb3\x0b\x99\x73\x3f\xf3\xb2\xb9\xd3\x73\xdc\xd0\x1d\x48\xc6\x7f\x43\x20\x49\xf0\x10\x67\x66\x17\xa7\xa7\x99\x3e\x78\x62\xc1\x39\x91\x93\xe7\x33\xb3\x89\xf9\xf3\x73\xb3\x5e\xe9\xf8\xeb\x41\x67\x4b\x44\x5d\xca\x3e\xe6\xab\xda\x21\xef\x68\xa7\x19\x28\xe2\xde\x7b\x91\xfe\x46\x22\xeb\xca\xa4\x4e\x38\x96\x67\x9f\x73\x1e\xa2\x99\x54\x32\x91\x1d\x30\xcd\xf4\x4c\x22\xd3\xdf\x1e\xf4\x92\xf4\x35\x24\x4e\xd2\x8b\xa7\x5a\xbf\x93\xc2\xd9\xc4\xec\x85\x13\x92\x88\xf9\x9a\x3d\x97\x12\x24\x72\xb9\xf9\xb9\xec\xc2\xeb\xeb\x81\xcb\x92\xd1\xdd\x78\xcc\xfe\xea\x40\x39\x71\x67\x13\x33\xa7\x51\x7f\x17\x09\x62\x03\x8e\x19\xdd\x06\x72\x62\xce\x24\x92\x78\x56\x7d\x8e\xdf\x7d\x9e\x58\x5b\x70\xc2\x57\x29\xe2\x5d\x3b\x23\x71\x36\xf1\xda\x63\xf5\xb9\xdd\xcf\x66\x16\x92\x73\x99\xd9\x3e\x87\xb3\x88\x47\x62\x2e\x4e\x8f\x7a\x77\x76\xa2\x5f\x5e\xb9\x55\xb2\xa7\xe6\xa4\x4e\xbc\x4d\x3c\x04\x63\xfd\x72\x23\xbb\x70\xfe\xb5\x59\xdf\xa7\xfd\x4b\x4c\xf5\xab\xd1\xbd\x87\xea\x32\x55\xa9\xc5\x3e\x69\xda\xac\x19\xf3\x90\x20\x81\x44\x3f\x7e\x00\x8d\x38\x92\x72\x7d\x5d\x11\x2b\xcb\x1a\x89\x0a\x7e\xcc\x0c\x0d\x83\xac\xed\x0d\xf3\x72\xad\x24\x4a\x48\xa0\x8e\xbc\xe9\xa8\x9b\xdd\x92\x00\xea\x8a\xb8\x0a\x35\xd3\xdd\xc5\xde\xb2\xed\xcb\x77\x1c\xea\x1a\x94\x60\x05\x09\xd8\xbf\xc5\xc3\x69\x08\xd6\x58\x20\xc8\x40\x92\x35\x50\x93\x05\xb1\xbc\x8e\x91\x1a\xd0\xa2\x2b\x88\x0a\xe2\xb5\xea\x3a\xdb\xcb\x51\xd6\xb0\x53\xce\xcb\xf5\x75\x32\x05\x93\x84\x48\x82\x1e\xe7\x7c\x86\x86\x41\xf8\x6d\xf7\x94\xa9\x6b\xfd\x36\x17\x0e\x87\xc3\x80\xc5\xd8\xa4\xf8\xf6\x8f\x2c\x44\x13\x62\x68\x18\x54\x14\x04\x35\xa4\x00\xea\x45\x53\xff\x5f\x5e\x45\xca\x25\x45\xc4\xe1\x4d\x0d\x56\xab\x9d\x5e\x05\xa9\x24\x7e\x29\x03\x01\x69\x88\xd7\x40\x5d\x56\x45\x4d\x94\x25\x1c\xb6\x60\xc7\x15\x87\x69\x43\x0e\x17\xdc\x31\x2b\x8f\xf7\x8d\x3d\x76\xf3\xe8\x91\xca\x32\x15\x5e\xe7\x44\x4f\x21\x95\x57\xc4\xba\x46\x62\xb5\xd6\x47\xbf\x6a\xdd\xdc\x35\xae\x3f\x21\x5d\x69\x89\x4a\x5f\x43\x55\x54\x5f\x96\x25\x54\x94\x1a\xb5\x12\x52\x48\x67\xd2\xec\x6c\x6f\xff\xf5\x60\xe7\x96\x71\xfd\x49\xfb\x8b\x4d\x53\x0d\x57\x51\x35\x0e\xa6\xe9\xf6\x1a\x06\x29\x3a\xff\x32\x12\xab\x02\x9e\x3c\x94\x00\x54\x14\xb8\x4e\x02\x37\x73\x71\x35\xa4\x2d\xcb\x82\xca\x92\x95\x29\xa8\x0a\xc9\x4a\xe5\x32\x40\x90\x5f\x06\xa2\x86\x6a\x24\x78\xa1\xc0\xa2\x0a\xe6\xb2\x36\xd4\x88\x39\x0c\x09\x50\x70\x88\x59\x41\x6b\x00\xad\xd5\x15\xa4\xe2\xf8\x93\x05\x92\x0c\x24\x84\x04\xa0\xc9\x00\xa9\x3c\xac\x23\x13\xe1\x42\x16\x55\xd8\x8b\xf8\xcf\x85\x94\xc8\x6b\xec\x45\xfc\xd7\x9a\xb3\xc8\x6b\xd8\x9f\xbf\x24\x2b\x02\xc7\x92\x9f\x08\x0b\x46\x46\x46\x0a\xac\x09\x11\xc0\xe8\x40\xd7\x01\x41\x0e\x82\x1f\xfc\x00\x04\x2e\x9a\x4d\x84\x52\xd0\xe4\x2e\x9e\x72\x9c\x94\x01\x19\xd2\x0c\xb3\x48\xd5\x1c\xc6\xaa\x63\x7c\x0b\x14\x0b\x8f\x0b\x4c\xc6\x03\x81\x40\x34\x1f\x0e\x9d\x29\x04\xf5\x40\x2c\x3f\x4a\x0b\xa3\xf9\x70\x28\x6a\x96\xc7\xf2\x11\x76\x34\x34\x8e\x8b\xe3\xf9\x30\x17\x1d\x0d\x4d\xe0\xf2\x84\x85\x74\xc6\x86\x0d\xe6\x41\xa8\x30\xb9\x24\x6c\xc4\x9a\x9d\x52\x50\x0f\x04\xc6\x63\xb4\x2b\x1f\x0e\x8d\x16\x96\x84\x8d\xa8\xb3\x3f\xb8\x54\xb2\xa6\xe7\x9a\xee\x30\x38\x27\x56\xb1\x3a\xdb\x91\x70\xa9\x0a\xf9\x95\xaa\xa8\x6a\x54\x24\xb4\xdb\x5a\xcf\xd9\x44\xb5\x22\xc7\x41\x7e\x26\x91\xbb\x90\x4e\xe1\xf8\x48\x6d\xd4\xeb\xb2\xa2\xa9\x80\x36\xb1\x1d\x5d\x47\x02\x58\xc5\x06\xa5\x43\xfa\x2d\x4b\x33\xc8\xa6\x20\x3b\x07\xef\xf5\x12\x6e\xd2\x1a\x8a\x84\x04\x6b\x18\x6b\x8e\x34\xdc\x37\xe3\x00\x8a\xa7\x62\x1d\xb2\x27\x09\x04\x2c\xf4\xe3\xc8\x8e\x58\x74\x4d\xc9\x81\x61\x07\x05\xaa\x6b\xb8\x68\x72\x24\x29\x4b\x1a\x5a\xc3\xe3\x3b\x15\xa7\x60\x4d\x83\xa7\xdd\xa4\x55\x05\xcb\x50\xc5\x3a\x59\x42\x78\x3b\xc8\x0d\x49\x70\xcf\x45\x5b\x16\x25\x8b\xe0\x45\xa4\x88\xe5\xf5\x2c\x94\x2a\x54\x79\x69\xdd\x62\x6d\xd2\x5c\x33\x43\xd8\xc5\x6b\x45\xb2\x57\x19\x16\x30\x0a\xaa\x41\x65\xa5\x58\x93\x4b\x62\x15\xa9\x0c\xcb\x24\x29\xc4\xbc\x05\x60\x42\xd2\x5f\x0c\x40\x37\x38\xc3\x32\xf6\x9e\x77\x96\x31\x04\x8f\xaa\x55\x86\x65\x28\x4d\x86\x65\xe4\x72\x59\xe4\x71\x81\x87\xa4\x03\xf7\x5b\x88\x76\x19\x23\xaa\x35\xa8\x68\x56\x4f\xa7\x62\x8e\x8a\xff\xca\x74\x2c\x86\x65\xaa\xa2\xb4\x42\x4b\xe6\x9a\x3a\x25\x51\x2a\xcb\xd6\x8c\xa5\x4e\x89\x50\xb0\x8a\x9e\x25\x14\x2d\xca\xa8\x83\xd5\xa9\x11\x4c\x67\x95\x62\xd3\x05\x76\x10\x6a\x72\xa9\x2a\x3a\x51\x9c\x00\x6e\x24\x07\xbc\x0b\xd6\x03\xc6\xcb\x02\x66\x85\x6d\x73\x19\x96\xd9\x7f\xfe\x45\xfb\xe6\x6d\xbb\x91\x61\x19\x6a\x58\x19\x96\x39\xd8\xdc\x6e\x7f\xb7\xc7\xb0\x0c\x35\xb8\x0c\xb0\xac\x46\xd2\x52\x4d\xcb\x08\x12\x8d\x24\xd6\xd5\x54\x38\x6b\xff\x9a\x5b\x10\x2b\x31\xdd\x5f\x44\xe3\x4b\x08\xac\x62\x7d\x12\xe9\x81\x4a\xca\xeb\xa0\xdc\x90\x78\x8d\xd8\x4f\xb5\xc1\x2f\x03\xa8\x9a\x51\x14\x0b\x0e\x76\xff\xb8\xbf\xf7\xfd\xc1\xce\x66\xeb\x8b\x3b\x87\xdf\x6e\x19\x97\xbf\x6f\xdd\x78\x68\xfb\x06\xce\xd0\x14\x0c\xdb\xf1\xaf\x3a\x62\x39\x13\xf4\x64\x59\xd3\xf0\x59\x14\x07\xc3\x00\xad\x69\x0a\x04\x58\xaa\x4a\x0d\xd2\x11\x57\x56\x01\xad\x21\x73\xe6\x69\x69\x4a\x91\x1b\xf5\x38\x68\xa8\x48\x29\x0a\x50\x83\xd6\xda\xad\x8e\xf6\xf6\xd7\xad\x2b\x4f\x5a\x37\x1e\xb6\xae\x3e\x70\x1d\x7c\x11\xcf\xc1\xd7\x89\xdb\x5c\x07\x5f\x7b\xfb\xaf\xc6\xfd\x8f\x0f\xdf\x7b\xb0\xbf\xf7\xd8\xb8\xf9\xd0\xb8\xf5\xae\xeb\x04\x24\x58\x45\x28\x08\xf8\x54\xf1\x1e\x7f\x14\xb1\xfd\xe0\x11\xe9\x20\x13\xa2\x7d\xee\xd9\xba\xcf\x45\xf7\xc1\xe0\xb5\xfc\x4b\xa5\x40\x20\x10\xc8\xbf\xf5\xc3\xa5\xd0\x8f\x26\xff\xb5\xb8\xa1\x37\xff\x63\xe9\x12\xb6\xe6\xde\x26\x77\x7d\x64\xe9\x52\x61\x23\xcc\x36\xbb\x10\x83\xf9\x9f\x14\x96\x2e\xfd\x30\x90\x0f\x8d\xe0\xdf\xe0\x5b\x4b\x23\xf9\x44\xe8\xe7\x30\xf4\x4e\x61\x23\xc2\x4e\x74\xac\xfc\x91\x46\xdb\xc7\xf6\x58\x3a\x95\x9a\x9b\x49\x64\x66\x0b\x0e\x35\xe8\x30\xda\x12\xf6\xeb\x0b\x33\xe6\x11\x26\x51\xb5\xa2\x23\xbc\x77\xc9\x74\xff\xe9\x7d\xe3\xf3\xef\x6d\x75\x7d\xf5\x7c\xcb\xb8\xfe\x6d\x6b\x7b\xa7\xb5\xb5\xc9\x4d\xec\x7f\x7f\xf5\xd5\xf3\xad\xc3\x9b\xef\x1e\xdc\xdd\x3c\x7c\xf7\xb3\x83\x97\x97\xa9\x3a\xb7\x1f\x7c\xda\xfa\xee\x86\x4b\xf8\xfc\xb2\x28\xc1\xa2\x28\x14\x79\xa8\x08\x2e\xe1\x7b\x46\x38\x95\x98\xb9\x3c\x17\x1a\x2d\xe8\x91\x3c\x17\x8a\x16\xf4\x68\x9e\x0b\x8d\x17\xf4\x58\x9e\x0b\x8d\x15\x74\x7c\xce\xc7\x0a\xfa\x18\x05\xc9\x8f\x87\xce\x14\xb8\x20\x39\x96\x03\xdc\x84\xce\x9d\xd1\x23\x61\x5c\x8d\x34\x03\x81\x70\x9e\xa3\xe7\x3d\x97\x0f\x87\x22\x85\x60\x30\x10\x20\x05\xb3\x99\x0b\xeb\x91\xb0\x1e\x0d\xeb\x51\x42\x20\xda\xc4\xee\xc1\xbf\xac\x15\x2c\xb9\xfb\x4b\x95\x72\xb6\xe0\xdd\xdc\x66\xe0\x35\x38\xb9\x8e\x7a\xe4\x9a\x4a\x9f\xcd\x2c\x14\xfd\xa5\x6a\xbc\x7b\xfb\xe0\xc1\x43\xe3\xea\x1d\xe3\xfa\x13\xf6\xf0\x93\xc7\x07\x9b\xdb\x2e\x69\x09\xa8\x24\x6a\x44\x54\x45\xc8\xf3\x72\x43\xd2\xfc\xbc\x56\x27\x95\x41\x6e\xdb\xb1\xc8\x92\xb0\xc1\x71\x2c\x37\xde\xf4\xe5\xac\x7d\x56\x93\x69\x92\x53\x53\x11\x18\x96\x59\x15\x55\x08\xac\xb6\x86\x24\xca\x52\x1d\xae\x63\xf3\x6f\xcd\x93\x71\x4a\xc1\xce\xef\x0c\x4e\x04\x63\xde\xad\x95\x4d\xa7\x7a\xca\x60\xff\xe5\x9d\xf6\xf6\xd7\x0e\xee\xd9\x5b\x45\x41\x42\x1f\xdc\xef\xc2\x3f\xb1\x6d\x24\x6a\x4d\x14\x39\x98\x5f\x52\x43\x85\x00\x75\x56\x7b\x95\x1d\x5e\xac\x5b\x4e\x80\x8b\x35\x3d\x5d\x16\x69\x2e\xc2\x72\x13\xfe\x52\xb4\xf6\x07\x65\x52\x67\x8f\x74\xe4\x0b\x18\xca\x0a\x86\xb5\x69\x9b\xff\x99\x12\xef\x6a\xc6\x1a\xe0\xd3\xdc\xd1\x85\xae\xae\x1a\x54\x35\xa4\xf4\x20\x07\x6b\x68\xcd\xa7\x59\x10\x55\x1e\xc7\x9c\x3e\x5d\xff\xc6\x97\x7c\x11\x24\xa4\xa8\xbe\xa3\x23\x55\x53\x64\x9f\x1e\x51\x52\x35\x58\x87\xeb\x35\x24\xf9\xad\xdf\x16\x3e\x63\x76\xbd\x61\xcd\x1e\xf7\x3d\x34\x5c\xd9\x4c\x77\x0c\xfc\xcb\x2f\xdb\x1f\xdc\x63\xa9\x6d\xa7\x15\x97\x8e\xd7\xa1\xaa\xe2\xc0\xc5\xa5\xd1\x0e\xb8\x13\xeb\x32\x97\x8f\x91\xb0\x6b\x1c\x07\x63\xf9\x79\xbd\xae\xe7\x74\xb5\xd3\x90\xd3\x55\x7d\x4a\xaf\xe8\x69\x1d\xe1\xc6\x09\xd2\x38\x55\xd1\x17\x34\x3d\xa7\xea\xd3\x55\xfd\x9f\xff\x5d\x4f\x09\x7a\x02\xea\xe7\xca\x1d\x80\xf3\xfa\xb2\x3e\xa3\xd7\x48\x03\xcb\x85\x1d\x5b\xa0\x87\x41\xb2\x96\x85\xdd\x68\xb3\x38\x8c\x1d\x63\x05\xae\x12\x47\x5c\x90\xf9\x06\x95\x28\x53\x92\xe5\x15\xf3\x47\x14\x88\x0d\xd3\x60\x55\xae\xe0\x92\xa8\x89\xef\x20\x49\x5d\x16\xeb\xd8\x89\x25\x4c\xc1\xbe\xeb\xce\xe6\xfe\xde\x63\xec\xbb\xde\x7f\x71\xb0\xb3\xe9\xb2\x65\x2e\x41\x0c\x4e\xea\x13\x1e\xa9\x3b\xf3\xcc\x5e\x2f\xa1\xf5\xdb\xcb\x3e\x3e\x9f\xe9\xed\x15\x79\xc9\x7b\xe6\xbb\xe1\x8f\x3d\x39\xb8\x3e\x14\x21\x10\x18\xd9\xe0\xd8\xb1\x66\xc0\xd8\xda\xd5\x0f\x6f\x5c\x0e\x4e\x9a\xf5\x83\x27\x3b\xfa\xc1\x9d\x4f\x83\xb4\x6a\x5c\x7f\x62\x17\x5a\x5f\x3d\x37\xcb\x57\x6f\x18\x1f\xfc\xc2\xc2\x7f\xf4\x9e\x6e\x3c\xf8\x52\x6f\x5d\x79\x12\x9c\x0c\xea\x26\x59\xe3\xda\x4b\xb3\xff\xf0\xc6\x65\x7d\xff\xd9\x9d\x01\xd3\xf7\x4e\xdb\x78\x78\xdd\xd8\xda\x1d\xec\x54\x5f\x83\xa6\xb5\x4a\xfd\xf0\xf2\x96\x77\xa5\xbd\x50\xac\xd1\x69\xb5\x75\xeb\xd7\x66\x7b\x7b\xef\x7d\xdd\x78\xb4\xd3\x21\xd3\x8d\xe3\x60\x68\xa0\x75\xeb\xd7\x0e\x70\x8a\x7d\x9d\x0e\x64\x62\xb5\x6f\x6e\xda\x4b\x7c\xfa\x9e\x83\x9f\x78\xc2\x07\x4f\x6c\x54\xe3\xc1\x63\xe3\xf3\xfb\xee\x25\x04\x83\x1e\x1d\x8a\xb0\x63\xcd\xc9\x40\xfb\xe6\xa6\x7e\x70\xf9\xdb\xd6\x9f\xf7\x8c\xad\xdd\xa0\x3d\xbf\xc9\x80\xf1\xf4\xbd\x4e\x87\x55\x7a\xf2\x7b\x17\xc8\xb5\x97\xba\x29\x4d\xb2\xfe\x60\x70\x83\x63\xa3\xcd\x80\x0f\x2b\xf1\xef\xe1\xe6\x27\xba\xb9\x46\xbd\xbd\xf7\x7e\xd0\xa1\x12\x44\x5e\xba\xf1\xe5\x3d\xe3\xda\x5d\xbc\x68\xdd\x78\xf6\xd2\xb8\xb9\xdb\x45\x91\x0a\xd3\x89\x49\x24\xea\x6c\xe8\x88\x88\x10\x6a\x5d\x79\x89\x7b\x97\x84\x1f\x86\xcc\xff\x83\xc1\x8d\x30\x1b\x6d\x1e\x71\x56\x3b\x6d\x8e\xd3\x18\x0c\xce\xe4\x9c\xf1\x98\x1c\xfb\x7a\xca\x6d\x6f\x76\x77\x8d\x8f\xaf\xba\x2c\x8d\x64\x85\xc5\xb6\x8d\xe9\xc0\x9c\xca\x2f\xb5\x12\x8b\x4c\x6b\xfb\xf1\xfe\xde\xe3\xfd\xdd\x5d\xe6\xa8\xe0\xcd\xc9\x1a\x7b\xd2\x83\xe3\x0b\x17\xf6\x30\xc6\x79\x75\xe6\xe2\xcd\x4c\x22\xe9\x63\x88\x67\x12\x49\xdf\xd0\xdb\x0d\x7d\x2c\xa3\xa2\x7d\x9d\xc7\x38\x2e\x82\xa1\x72\x22\x74\xae\x80\xe3\xaa\xb8\xbb\x1e\xdc\x18\xf5\xba\x8b\x38\xcc\x3a\x93\x08\x9d\x83\xa1\x32\x86\xc8\xc7\x43\x05\x0c\xe5\x69\xb6\x0e\xdf\x61\x53\x02\x80\xe4\x46\xf8\x84\x20\x28\xd6\xc5\x45\x43\x45\x56\xbe\xcf\x4a\xc2\xac\x23\x2b\xb3\xd8\x39\xa7\x91\xb6\x4c\x73\x48\x90\x67\x58\xc0\x98\x8c\xc1\x45\xca\x0c\x5c\xaa\x41\x1e\xb7\x3b\x8a\x26\x88\xdd\xca\xbb\xce\x60\xa7\x40\x06\x28\x77\xef\xa5\x43\x5f\x67\x30\xdb\xfa\xe2\x59\xeb\xea\x83\x15\xb4\xde\xba\xf5\xd5\xc1\xce\x87\xc6\x95\x3f\x9e\xea\x58\x3e\x7e\x7f\x38\xc4\x48\x93\x6b\x0e\xec\x37\x69\x27\x38\x6f\x4e\x2a\x71\x36\x51\xcc\xce\x2d\x2e\x64\x66\xa7\xba\x79\x93\x38\x9b\x00\x66\x27\xa0\xc9\xc0\x57\xcf\xb7\x5a\xdb\x3b\xed\xaf\xbe\x36\x76\x6f\x1c\xfe\xe2\xeb\xf6\x67\xef\xb7\x9f\xff\xd6\xba\x7d\xb1\xd8\x54\x82\xd2\x4a\xb1\xa4\x40\x89\x5f\x2e\xf2\xb2\xe0\xb6\x2f\x38\x6c\xbe\xb3\x65\x5c\xf9\xb0\xb5\xbd\xd3\xba\xb9\xdb\xfa\xfd\xfb\xa7\x0c\xc4\xf2\x61\x2e\x12\x1d\x1b\x9f\x30\xfd\xce\xee\xad\xd1\xe9\x8e\x36\x43\x24\x16\x0b\x2d\x09\x47\x27\x1d\x98\xc4\xd9\x84\xb9\x60\xa6\x3b\xac\xf2\xae\x0b\xbb\x99\xdb\x3b\x07\x77\xb6\xf6\xf7\xfe\x8b\x26\x4a\x61\x09\x32\x2c\xa3\xc8\x0d\x4d\x94\x2a\x2e\x35\xb7\xae\xd0\x07\x28\xca\xa8\x6f\x70\x91\xca\x66\x2e\xa6\xb3\xc5\xe9\x4c\x32\x3d\x9b\xf3\x3b\x03\x48\x6c\x71\xf8\xcd\x8b\xf6\x07\xf7\x5e\x3d\xdf\x3a\xb8\xf7\xbe\x71\xe5\x77\xad\xad\x8f\xec\x4c\xd2\xe1\xb7\x5b\x56\x3e\xc9\xce\x6b\x28\xe2\xaa\x28\x55\x8a\x55\x91\x47\x92\x8a\xbc\xca\x6f\xd3\x3b\x55\x0c\xf2\x3f\x31\x09\xd5\x49\x95\x28\x22\x89\x58\x01\x63\xae\x1d\x17\x4d\x76\xe0\xe2\xe1\x37\x2f\x0e\xbf\x79\x8c\xe3\x0a\x5a\xc1\x31\x47\xc1\xa3\x54\x7f\xab\x4c\x16\xe7\x4d\x51\x3a\xdf\x52\xb8\xc3\xcc\x9d\xed\xf6\x47\xcf\x8c\xa7\x9b\x87\xbf\x79\x64\x6c\x7d\xe0\x73\xee\x95\x44\x8d\x97\x45\xb7\x99\xeb\x8d\x75\x32\x91\xe7\xb9\x68\x21\x0f\x43\x2b\xb5\xd0\x3b\x89\xd0\xf9\x7f\x0a\xcd\xce\x87\x7e\x8e\x85\xb4\x11\x19\x63\xa3\xd1\xa3\xb3\x1e\xe6\x92\x5c\x61\xbb\x63\x95\x03\x64\x66\x57\x5e\x90\x64\x99\xbb\x79\x69\xdc\xbe\xed\xf5\xa9\x04\xb9\x06\x45\xa9\xd8\xe5\x5a\x39\x40\x4f\x12\x9f\xd1\x84\x7c\x20\x0f\x31\xbf\x7e\x6e\x5e\xad\x3a\x6a\x9d\xe2\x52\xa8\xb0\x11\x66\x27\xc6\x9a\x4e\xd8\xe0\xd2\xc8\x09\x90\xc7\xa3\x47\x22\x6f\x44\x58\x2e\xd2\x5c\x1a\x31\x9b\xcc\x7a\x87\x24\x6e\x88\x8c\xe2\x88\x5f\x3f\xc9\x94\xb9\xb1\xc8\x80\x86\xed\x91\x6a\xf0\xbb\x2b\x18\xa6\xfa\x03\x86\x4d\x81\xb9\x2e\x61\x6b\x50\x5d\x41\x02\x5b\x6a\x68\x00\xaa\x00\xda\x6f\x22\x34\x54\x3b\x52\xd3\x2a\xf8\xc7\x57\xd5\x0e\x3f\xff\xd0\xf8\xfc\x0f\x7e\xaa\xe6\xcd\x7f\x66\xe6\xbb\xd5\x2c\x33\x4f\xf7\xdb\xab\xe7\x5b\x78\xef\x7d\xfc\xc7\xd5\x98\xf1\x9b\xad\xd5\x31\x97\xe2\x65\xe6\x7d\x9d\x55\x0b\xf7\x14\x2e\x69\x20\x30\x19\x8f\x8c\x92\xcb\x79\x3d\x42\x8c\x31\xb9\xdb\xd7\xf3\x61\x8e\xdc\xd9\x9f\xa1\xf5\x49\x2c\xb0\xbf\x23\x64\xd7\xe9\x3f\x19\x0f\x2c\xa9\xfa\x52\x02\x1f\x03\x01\xa7\x1f\xcd\xb1\xb1\x66\x3c\xb8\x31\xce\x8e\x37\xbd\xcd\x7a\x19\x4d\x84\xe3\x81\xb8\xee\xf6\xbc\x71\x17\x8e\xf0\x62\xcd\xe0\x3f\xd0\x76\xaa\x71\x1c\xdb\xd4\xe3\xf1\x40\xb9\x5c\x2e\x07\xe2\x61\x1b\x8c\xc3\xe4\xf1\x4f\x20\x60\x4d\x3d\x40\xe7\xae\x73\xa4\x9d\x3e\x8e\x70\x14\x97\x46\x82\x1b\x51\x1c\x94\xf6\x09\xaf\xfb\x2d\x88\xfc\xbc\xb9\x21\xbb\x46\x0c\xf8\x31\x09\x07\xcc\xbd\xa6\xe7\x0d\x68\x2c\x8c\xd1\x66\x0f\x84\x68\x0f\x84\x58\x2f\x84\x58\x0f\x84\x68\x2f\x84\xd1\x1e\x08\x91\x5e\x08\x63\xcd\x2e\xf8\x1e\x90\xe3\xcd\x78\x50\xef\xc5\xa4\xf1\xa6\x1e\x0f\x06\x2d\x1d\x7d\xc7\xd6\xde\x8e\x41\xca\xcc\x0f\xc4\x18\x9d\xe2\xd8\xf3\x66\xac\x17\x73\x47\xa4\xab\xdb\x2f\xae\xf9\xe7\xa9\x1b\x6a\xd1\x37\x55\xdd\x85\x70\x42\xcf\x81\x9c\x05\x67\x8e\xb9\xde\x5a\xcc\x25\x1c\x89\xe4\xff\x23\x39\x65\xce\x9b\x54\x5e\xcc\x15\xcf\x26\x66\x2f\x14\x1d\xaf\x88\x7d\x64\x43\xa3\xad\x83\xbf\xdc\xf5\xde\x96\x35\xd4\x22\x09\x67\x8e\xb8\x29\xeb\x41\xe1\x34\x22\x9b\x38\xfe\x52\xb2\xa1\xe2\xd0\x09\xcf\x09\xf3\x7d\x19\xf1\xf8\xd7\x9c\x5d\xa7\x34\x4c\x8b\xb8\x45\x85\xab\x38\x02\xa3\x17\x97\x6f\xf8\x1e\x87\xf3\xe6\xd7\x16\x73\xc5\xcc\x82\x9f\x3b\x48\x99\xd6\xde\xfd\xae\xfd\xf5\xb5\xfd\xdd\x5d\x9a\x44\xe8\x7a\xd4\x08\xd7\xea\x70\x1d\x29\x45\x51\x40\x92\x26\x96\x45\x9e\xbc\x3e\xe9\x2d\x84\x1e\xf4\x4e\x1a\x6a\x9d\x21\xb1\x52\x30\x10\x18\xa7\x62\xe1\x9a\xfa\x44\x3e\x1c\x9a\xc0\x25\xf3\xb9\x5e\xc4\x2e\xc7\x28\x44\x30\x18\xf0\x3e\xc6\xf3\x90\xcb\x87\x00\x06\x3c\x21\x55\x0b\xcb\x4d\xbc\x87\x72\x88\x92\x20\xae\x8a\x42\x03\xe2\x9d\x6b\x71\x8f\x61\x19\x51\x13\x25\xda\x42\xb6\x39\x6d\xd4\xe0\x1a\xd9\xc6\xb8\xef\x0d\xeb\x45\xc4\x9b\x5e\xec\xf1\xb6\xd5\x94\xa2\xf7\xb9\xaa\x63\x33\x1e\xfd\xce\xd5\x1f\xfd\xa4\xe2\xa7\x77\xd6\x4b\xea\x5b\x34\x00\x0e\x2d\x8d\x2c\xa9\x85\x49\xfa\xd6\x52\x77\xb6\x79\xca\xb1\xee\xec\x4a\x2f\x68\x93\xda\x71\xf7\x7d\xff\xff\xf4\xef\x7f\xeb\xd3\x3f\xd7\x51\x67\x2b\xfb\x00\x77\x94\x37\x71\x9b\x9b\x2a\xce\x66\x33\xc9\xe2\x39\xdf\x44\xc6\x6f\x1f\x1a\xbf\xfc\xc2\xb8\x75\xc7\xfd\x0e\xca\xda\x57\x6a\xc5\xf7\xe9\x54\x0f\xac\x93\x6e\xa7\x49\x31\x18\xc8\xe7\x16\xce\x4d\xd1\x28\x64\x63\xbc\x99\xc7\x81\xc1\x71\xb6\xac\x4c\x4c\x56\x59\x94\xf0\x59\x26\x29\x22\x6f\xfe\x0c\xbb\x78\xeb\x78\x58\x36\x40\xe6\x7a\x53\x86\x47\x7a\x10\xce\x93\x9f\x5d\x59\x6d\x3f\xda\x33\x7e\xff\x2b\x77\x96\xe8\x18\x0f\xe2\x44\xbe\x83\x7d\x71\x84\xa9\x9a\x4f\x93\xc8\x00\xce\xb2\x7b\x30\x86\x65\xcc\x74\xf2\xd5\x3b\x76\x99\x0e\x87\xb5\xda\x7e\xec\x61\x7a\x09\xc0\x97\x92\xfc\xc6\x0f\x89\xae\xa7\x83\x89\x6c\x4f\xa6\x1f\x7c\x7f\xb7\xfd\xd1\x56\x4f\x8e\x9b\x59\xc8\x62\xbd\x0a\x35\xdf\xa3\xc2\xc6\xef\x9f\xdf\x2e\x9a\xf4\x59\x58\x87\xbf\x94\x1e\xb1\x8d\x04\x8a\x02\xb9\x92\x99\x89\x41\x5f\xde\x44\xbc\xb9\xb7\xe3\x1e\xcc\xf4\x64\xd7\x11\xef\x65\x4e\xc4\x22\x47\x30\x61\x07\x01\xad\xa7\x3b\xad\x17\xdf\x1d\xbe\xfb\x19\xd6\xb9\x9d\x4d\x62\x34\x1f\xb6\x9e\xbd\xe8\xb4\xf4\xfa\xb6\xe2\xef\xf1\xf2\xe6\x8d\x06\x27\x11\x6f\x06\xcb\xfa\x3e\xce\xad\xda\x0f\x5e\x18\x5f\x5e\xce\xa4\xfc\x45\x25\x88\x6e\x23\x6d\x41\x1f\x9b\xb4\xb2\x85\x24\x10\xaf\x4f\x40\xab\x22\x8f\x1c\xc5\x22\x2d\xf7\xee\x74\x2a\x73\x6a\xe0\x59\xf9\x88\x37\xa2\xf6\xbf\x9a\x37\xee\x7d\x62\x7c\x7c\xd5\x9f\x35\xdd\x89\x64\x02\xec\xe2\x8c\x5f\x22\xd9\xe4\x0c\xc8\x33\x98\x02\x56\x50\x82\x87\x0b\x1f\x5f\x35\xee\x7f\x4a\x82\xa8\x2a\x2a\x9a\xbd\x74\x09\x18\xe0\x0d\x5f\xca\x47\xbc\xb1\x2c\xf9\xcc\x31\x95\xf8\x99\x8f\xe3\xbc\x7d\xbb\xf5\xe9\x57\x3d\x4e\x1f\x51\xd1\x96\x05\xb8\xee\x76\x95\x09\xc2\x09\x58\x63\x51\x21\x0c\xc0\xb8\xf8\x80\xc0\x6d\x78\x8b\xff\xe7\x6d\x63\xf7\x9e\xfb\x7c\xb0\xbf\xc8\x1c\x20\x3f\xbc\xd1\xa5\xf5\x25\xa6\x5b\x43\x9e\xfd\xe5\xf0\xc5\xfb\xfe\xac\x80\x15\x8f\x82\x10\xd8\x7e\xb9\x90\x67\x60\x85\xa8\x07\xc1\xc2\x85\x3f\x6f\xb6\x6e\x3c\x3c\xce\x7e\x85\x43\xa3\x85\xa0\x4e\xef\xd7\x26\x3b\x37\xab\xe6\x7d\xe7\xd4\xa0\xb5\x26\xea\x8d\xb5\xd2\xa9\xc5\x24\xf9\x17\x2a\x7c\x78\x75\xff\xae\x71\xed\x43\x7f\x5e\x21\xa1\x61\x86\xdb\x68\xad\x8e\x14\x11\x49\xbc\x87\x79\x04\xb9\x7f\xbb\x63\x13\xc4\x9c\x23\xb8\x0c\xdb\x69\x84\x55\x50\x82\xfc\x4a\x85\x7c\x66\x45\x21\x0e\x7f\xf7\x07\xec\x9e\x3c\xfd\x64\xff\xe9\x67\x2e\xe5\xb2\xbe\x96\x1d\x20\xd3\xbc\xee\xf4\x2c\xe1\x58\x62\x3a\xb3\xe0\xb3\xdb\x70\x90\xf9\xa8\xa7\x11\xa2\xab\x11\x35\xf7\x86\xa3\x38\xfd\xab\x9a\x83\x0e\xe6\x06\xc1\x76\x33\xc1\xfd\x6f\x85\x0c\x90\x17\xde\xb7\x0f\xb9\x9c\x5f\x02\xe7\xcb\x17\xfb\xcf\x3f\xdb\x7f\x79\xeb\xf0\x77\xdf\x18\x57\xef\xf8\x33\x43\x95\x79\x11\x56\x8b\xa2\xa4\x36\x14\x28\xf1\xa8\x3b\xc6\xf0\x90\xe9\xdf\xd5\xc0\x88\x2f\x6f\x51\x0f\x36\x97\x9b\xc5\x36\x5a\x6e\xe0\xd1\x80\x8a\xf8\x86\x22\x6a\xeb\xc0\x76\xce\x5c\x83\x5c\x7f\xf2\xe6\x03\x88\xa8\x37\x80\x98\x9e\xeb\xb5\x05\xdb\x7b\xd7\xdb\xbb\x7f\x32\x76\xef\xee\xbf\xbc\xd3\xda\xdc\xe9\xe1\xce\x42\x4d\xd4\x1a\x02\x2a\x42\x49\x28\x56\x65\xa9\x42\x6b\x8e\x2f\xb2\xdc\x4c\x75\xd3\xec\x5f\xe9\xac\x71\xb0\x1f\x6b\x8d\x82\xcb\x10\x7b\x74\x55\xa9\x82\x79\xb9\x77\xdd\xd8\xbd\x4b\xf6\xe5\xcd\xf6\xde\x75\xec\xfa\x7e\xf5\x92\x16\xe8\x98\x58\x5b\xaf\x7e\xda\xde\xfd\x13\x2e\x6c\x91\xc2\xdf\x46\x6d\xbd\xe1\x43\xe7\x83\x78\x17\xc3\x3b\xcd\x16\x77\x3b\x2d\xc9\xae\x96\x23\x83\x5d\x8b\x6d\xb1\x68\x6c\x9c\x17\x62\xe1\x09\x9e\x2b\x09\xd1\xe8\x18\x9c\x08\x73\x13\x63\xe3\x42\x34\x0c\x21\x8f\xc6\xc2\x0c\xcb\xc4\xca\xe3\xe3\xd1\x09\xa1\x1c\x43\xd1\x51\xee\x8c\x30\x31\x16\x46\xb1\xd1\xd1\x18\x8c\xf1\x30\x32\x26\x8c\x86\x99\x02\x18\x06\x35\x61\x34\xc0\x90\xb1\x99\xa0\x83\x65\x8e\x19\x0f\x8e\x5b\x5d\xb1\x43\x8f\x8c\x1c\x49\x67\xbc\x7a\xbe\xe5\xab\x97\xaf\xf3\xd5\x79\xaf\x7d\x4d\xf3\x27\x38\x80\xb8\x71\xb0\xf3\x91\x5d\xb5\x33\x5a\x34\x47\x45\x55\xea\xf8\x4f\xe1\x7a\x65\x60\xde\xfc\x57\x8d\x51\xaf\xb3\xbf\xe8\xe7\xec\x53\x74\x4c\x1d\x98\x8e\x7d\x27\xd9\x89\x14\x8f\xaf\xdf\x01\x2e\x9a\x3d\xa7\x7a\x51\x69\xf1\x1a\x34\x44\x81\x35\xa9\x39\xb9\xb5\x38\x10\xe7\xde\xfd\xcf\x1d\x20\x49\xf8\xef\x00\x00\x00\xff\xff\xe0\x2d\xbb\xa8\xec\x4e\x00\x00")

func confYmlBytes() ([]byte, error) {
	return bindataRead(
		_confYml,
		"conf.yml",
	)
}

func confYml() (*asset, error) {
	bytes, err := confYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conf.yml", size: 20204, mode: os.FileMode(0644), modTime: time.Unix(1636518508, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0xf4, 0x1e, 0x98, 0x38, 0xef, 0x8b, 0x9, 0xe3, 0xb4, 0x87, 0xca, 0xbb, 0x50, 0xd0, 0xc3, 0xd8, 0xb8, 0x1d, 0x56, 0xf4, 0x7, 0x3, 0x46, 0x84, 0x26, 0xcf, 0x50, 0x36, 0xe1, 0xa1, 0xec}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"conf.yml": confYml,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"conf.yml": {confYml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
